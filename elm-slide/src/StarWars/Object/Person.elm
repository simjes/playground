-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module StarWars.Object.Person exposing (FilmConnectionOptionalArguments, StarshipConnectionOptionalArguments, VehicleConnectionOptionalArguments, birthYear, created, edited, eyeColor, filmConnection, gender, hairColor, height, homeworld, id, mass, name, skinColor, species, starshipConnection, vehicleConnection)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import StarWars.InputObject
import StarWars.Interface
import StarWars.Object
import StarWars.Scalar
import StarWars.ScalarCodecs
import StarWars.Union


{-| The name of this person.
-}
name : SelectionSet (Maybe String) StarWars.Object.Person
name =
    Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


{-| The birth year of the person, using the in-universe standard of BBY or ABY -
Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin is
a battle that occurs at the end of Star Wars episode IV: A New Hope.
-}
birthYear : SelectionSet (Maybe String) StarWars.Object.Person
birthYear =
    Object.selectionForField "(Maybe String)" "birthYear" [] (Decode.string |> Decode.nullable)


{-| The eye color of this person. Will be "unknown" if not known or "n/a" if the
person does not have an eye.
-}
eyeColor : SelectionSet (Maybe String) StarWars.Object.Person
eyeColor =
    Object.selectionForField "(Maybe String)" "eyeColor" [] (Decode.string |> Decode.nullable)


{-| The gender of this person. Either "Male", "Female" or "unknown",
"n/a" if the person does not have a gender.
-}
gender : SelectionSet (Maybe String) StarWars.Object.Person
gender =
    Object.selectionForField "(Maybe String)" "gender" [] (Decode.string |> Decode.nullable)


{-| The hair color of this person. Will be "unknown" if not known or "n/a" if the
person does not have hair.
-}
hairColor : SelectionSet (Maybe String) StarWars.Object.Person
hairColor =
    Object.selectionForField "(Maybe String)" "hairColor" [] (Decode.string |> Decode.nullable)


{-| The height of the person in centimeters.
-}
height : SelectionSet (Maybe Int) StarWars.Object.Person
height =
    Object.selectionForField "(Maybe Int)" "height" [] (Decode.int |> Decode.nullable)


{-| The mass of the person in kilograms.
-}
mass : SelectionSet (Maybe Float) StarWars.Object.Person
mass =
    Object.selectionForField "(Maybe Float)" "mass" [] (Decode.float |> Decode.nullable)


{-| The skin color of this person.
-}
skinColor : SelectionSet (Maybe String) StarWars.Object.Person
skinColor =
    Object.selectionForField "(Maybe String)" "skinColor" [] (Decode.string |> Decode.nullable)


{-| A planet that this person was born on or inhabits.
-}
homeworld : SelectionSet decodesTo StarWars.Object.Planet -> SelectionSet (Maybe decodesTo) StarWars.Object.Person
homeworld object_ =
    Object.selectionForCompositeField "homeworld" [] object_ (identity >> Decode.nullable)


type alias FilmConnectionOptionalArguments =
    { after : OptionalArgument String
    , first : OptionalArgument Int
    , before : OptionalArgument String
    , last : OptionalArgument Int
    }


filmConnection : (FilmConnectionOptionalArguments -> FilmConnectionOptionalArguments) -> SelectionSet decodesTo StarWars.Object.PersonFilmsConnection -> SelectionSet (Maybe decodesTo) StarWars.Object.Person
filmConnection fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, first = Absent, before = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "filmConnection" optionalArgs object_ (identity >> Decode.nullable)


{-| The species that this person belongs to, or null if unknown.
-}
species : SelectionSet decodesTo StarWars.Object.Species -> SelectionSet (Maybe decodesTo) StarWars.Object.Person
species object_ =
    Object.selectionForCompositeField "species" [] object_ (identity >> Decode.nullable)


type alias StarshipConnectionOptionalArguments =
    { after : OptionalArgument String
    , first : OptionalArgument Int
    , before : OptionalArgument String
    , last : OptionalArgument Int
    }


starshipConnection : (StarshipConnectionOptionalArguments -> StarshipConnectionOptionalArguments) -> SelectionSet decodesTo StarWars.Object.PersonStarshipsConnection -> SelectionSet (Maybe decodesTo) StarWars.Object.Person
starshipConnection fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, first = Absent, before = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "starshipConnection" optionalArgs object_ (identity >> Decode.nullable)


type alias VehicleConnectionOptionalArguments =
    { after : OptionalArgument String
    , first : OptionalArgument Int
    , before : OptionalArgument String
    , last : OptionalArgument Int
    }


vehicleConnection : (VehicleConnectionOptionalArguments -> VehicleConnectionOptionalArguments) -> SelectionSet decodesTo StarWars.Object.PersonVehiclesConnection -> SelectionSet (Maybe decodesTo) StarWars.Object.Person
vehicleConnection fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, first = Absent, before = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "vehicleConnection" optionalArgs object_ (identity >> Decode.nullable)


{-| The ISO 8601 date format of the time that this resource was created.
-}
created : SelectionSet (Maybe String) StarWars.Object.Person
created =
    Object.selectionForField "(Maybe String)" "created" [] (Decode.string |> Decode.nullable)


{-| The ISO 8601 date format of the time that this resource was edited.
-}
edited : SelectionSet (Maybe String) StarWars.Object.Person
edited =
    Object.selectionForField "(Maybe String)" "edited" [] (Decode.string |> Decode.nullable)


{-| The ID of an object
-}
id : SelectionSet StarWars.ScalarCodecs.Id StarWars.Object.Person
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (StarWars.ScalarCodecs.codecs |> StarWars.Scalar.unwrapCodecs |> .codecId |> .decoder)
